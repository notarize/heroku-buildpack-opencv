#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse params
build_dir=$1
cache_dir=$2
env_dir=$3

opencv_version="2.4.13"
pack=$(dirname $0)
if [ ! "${pack:0:1}" == "/" ]
then
  base=$(pwd)
  pack="${base}/${pack}"
fi
opencv_path="${pack}/../vendor/opencv-linux-amd64-${opencv_version}.tar.gz"

# vendored_opencv="/app/vendor/opencv"
vendored_slug="$build_dir/vendor/opencv"
cached_opencv="$cache_dir/opencv"

mkdir -p $vendored_slug

if [ -d "$cached_opencv" ]; then
  echo "-----> Reusing cached OpenCV"
  # cp -a $cached_opencv $vendored_opencv
  cp -a $cached_opencv $vendored_slug
else
  echo "-----> Copying and extracting OpenCV"
  echo "Extracting [$opencv_path] to [$vendored_slug]"
  # mkdir -p $vendored_opencv
  # tar xzf ${opencv_path} -C $vendored_opencv
  tar xzf ${opencv_path} -C $vendored_slug

  mkdir -p $cache_dir # in case it doesn't exist yet
  # cp -a $vendored_opencv $cached_opencv
  cp -a $vendored_slug $cached_opencv
fi

# vendor
echo "-----> Vendoring OpenCV shared objects into slug"
# mkdir -p $vendored_slug
# cp -a "$vendored_opencv/." $vendored_slug

# BUNDLE_ is the env prefix for bundler configs
# see https://bundler.io/v1.16/bundle_config.html for more
opencv_env=${env_dir}/BUNDLE_BUILD__RUBY-OPENCV
if [ ! -f ${opencv_env} ]; then
    # echo "--with-opencv-dir=${vendored_opencv}/" > ${opencv_env}
    echo "--with-opencv-dir=${vendored_slug}/" > ${opencv_env}
fi

# runtime
mkdir -p "$build_dir/.profile.d"
# echo "export LD_LIBRARY_PATH=\"$vendored_opencv/lib:$LD_LIBRARY_PATH\"" > $build_dir/.profile.d/opencv.sh
echo "export LD_LIBRARY_PATH=\"$vendored_slug/lib:$LD_LIBRARY_PATH\"" > $build_dir/.profile.d/opencv.sh
echo "ls app/*" >> $build_dir/.profile.d/opencv.sh

echo "*** OpenCV installation finished ***"
